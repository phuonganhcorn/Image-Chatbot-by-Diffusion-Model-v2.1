export interface Point {
    x: number;
    y: number;
}
export declare const calculateOrigin: (container: Element, {x: offsetX, y: offsetY}: Point) => {
    x: number;
    y: number;
};
export declare const calculateAngleDelta: ({x: x1, y: y1}: Point, {x: x2, y: y2}: Point) => number;
export declare const calculateAngleFromOrigin: ({x: originX, y: originY}: Point, {x: pointX, y: pointY}: Point) => number;
export declare const calculateAngleToPoint: (container: Element, offset: Point, point: Point) => number;
export declare const calculateAngleBetweenPoints: ({x: originX, y: originY}: Point, {x: startX, y: startY}: Point, {x: endX, y: endY}: Point) => number;
export declare const calculateRadialPosition: (container: Element, offset: Point, radius: number, point: Point) => {
    x: number;
    y: number;
};
export declare const calculateRadialPositionFromValue: (offset: Point, radius: number, value?: number, minValue?: number, maxValue?: number) => {
    x: number;
    y: number;
};
export declare const absoluteContainerPosition: (container: Element) => {
    x: number;
    y: number;
};
export declare const valueToRadians: (value: number, minValue: number, maxValue: number) => number;
export declare const angleToValue: (angle: number, minValue: number, maxValue: number) => number;
