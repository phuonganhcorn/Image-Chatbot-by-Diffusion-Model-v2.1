/// <reference types="react" />
import * as React from 'react';
import { Point } from './helpers/geometryHelpers';
export interface MovementResponse {
    coordinates: Point;
    value: number;
    pressed: boolean;
}
export interface SliderProps {
    children?: any | any[];
    className?: string;
    draggable?: any;
    draggableOffset?: number;
    maxValue?: number;
    minValue?: number;
    motion?: 'loop' | 'infinite' | 'once';
    onMove?: (response: MovementResponse) => void;
    onMoveEnd?: (response: MovementResponse) => void;
    radius?: number;
    value?: number;
    size?: number;
}
export interface SliderState {
    pressed: boolean;
}
declare class CircularSlider extends React.Component<SliderProps, SliderState> {
    static defaultProps: SliderProps;
    state: SliderState;
    private defaultStyle;
    private center;
    private padding;
    private container;
    private coordinates;
    private angle;
    private value;
    constructor(props: SliderProps);
    componentDidMount(): void;
    render(): JSX.Element;
    private moveListenerArgs;
    private endListenerArgs;
    private addEventListeners;
    private removeEventListeners;
    private handleMouseDown;
    private handleTouchStart;
    private handleMouseUp;
    private handleTouchEnd;
    private handleMouseMove;
    private handleTouchMove;
    private getMovementData;
}
export default CircularSlider;
